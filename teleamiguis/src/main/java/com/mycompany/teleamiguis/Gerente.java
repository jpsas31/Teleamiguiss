/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this
 * license Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.teleamiguis;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.swing.JRViewer;
import static services.Reportes.createPrint;
import static services.Reportes.createReportView;
import static services.Reportes.getConnection;
import modules.AdministradorClientes;
import modules.AutoCompletion;

/**
 *
 * @author gyron
 */
public class Gerente extends javax.swing.JFrame {

    private AdministradorClientes admClient;
    private String idActual;
    private String tipoidActual;
    int xMouse;
    int yMouse;
    private String idUsuario;
    private String tipoidUsuario;
    private String numero;
    private boolean flag;
    private JLabel texto1;
    private JLabel texto2;
    private com.toedter.calendar.JDateChooser calendar;
    private com.toedter.calendar.JDateChooser calendar1;
    private JPanel panelCalendar;


    /**
     * Creates new form Gerente
     */
    public Gerente(String id, String tipoid, String nombreUser) {
        initComponents();
        idUsuario = id;
        tipoidUsuario = tipoid;

        tituloSuperior.setText("Usuario " + nombreUser);

        try {
            // Hacemos invisibles todos los jlabel de abajo del tab de gestionClientes
            admClient = new AdministradorClientes(); // se crea una instancia de la clase
                                                     // AdministradorClientes
        } catch (IOException | SQLException e) {
            System.out.println("Hubo un problema al crear la clase administradorCliente");
        }
        estadoventanasEstadoCliente(false);
        estadoventanasConsultaClientes(true);
        limpiar(); 
        flag = false;

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        agregarPlan = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        scrollDialog = new javax.swing.JScrollPane();
        panelDialog = new javax.swing.JPanel();
        panelGeneral = new javax.swing.JPanel();
        panelIzq = new javax.swing.JPanel();
        nombre = new javax.swing.JLabel();
        rol = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        cont_reg = new javax.swing.JPanel();
        clientes = new javax.swing.JButton();
        cont_est = new javax.swing.JPanel();
        estadoClientes = new javax.swing.JButton();
        cont_rep = new javax.swing.JPanel();
        reportes = new javax.swing.JButton();
        cont_sal = new javax.swing.JPanel();
        salida = new javax.swing.JButton();
        panelDer = new javax.swing.JPanel();
        Fondo = new javax.swing.JLabel();
        tabsClientes = new javax.swing.JTabbedPane();
        tabGestiosClientes = new javax.swing.JPanel();
        label_id = new javax.swing.JLabel();
        label_nombre = new javax.swing.JLabel();
        label_dir = new javax.swing.JLabel();
        label_tel = new javax.swing.JLabel();
        label_mail = new javax.swing.JLabel();
        label_estado = new javax.swing.JLabel();
        label_titulo = new javax.swing.JLabel();
        label_cargo = new javax.swing.JLabel();
        label_resul_estado = new javax.swing.JLabel();
        jTF_resul_nombre = new javax.swing.JTextField();
        jTF_resul_dir = new javax.swing.JTextField();
        jTF_resul_tel = new javax.swing.JTextField();
        jTF_resul_mail = new javax.swing.JTextField();
        jTF_resul_id = new javax.swing.JTextField();
        campoConsultaCliente = new javax.swing.JComboBox<>();
        label_notificacion = new javax.swing.JLabel();
        label_resulEstado2 = new javax.swing.JLabel();
        jTF_resul_tipoid = new javax.swing.JComboBox<>();
        label_imEstado = new javax.swing.JLabel();
        jTF_resul_tipocliente = new javax.swing.JComboBox<>();
        cont_act = new javax.swing.JPanel();
        actualizarInfo = new javax.swing.JButton();
        cont_reg1 = new javax.swing.JPanel();
        Registrar = new javax.swing.JButton();
        cont_acti = new javax.swing.JPanel();
        cambiarEstado = new javax.swing.JButton();
        cont_limp = new javax.swing.JPanel();
        Limpiar = new javax.swing.JButton();
        tabRegistroNumero = new javax.swing.JPanel();
        label_titulo1 = new javax.swing.JLabel();
        campoConsultaClientePlan = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelLista = new javax.swing.JPanel();
        cont_agg = new javax.swing.JPanel();
        agregarNumero = new javax.swing.JButton();
        tabsReportes = new javax.swing.JTabbedPane();
        reporteGanancias = new javax.swing.JPanel();
        reporteFactura = new javax.swing.JPanel();
        reporteOperadores = new javax.swing.JPanel();
        reporteNose = new javax.swing.JPanel();
        barraTitulo = new javax.swing.JPanel();
        tituloSuperior = new javax.swing.JLabel();

        agregarPlan.setAlwaysOnTop(true);
        agregarPlan.getContentPane().setLayout(new java.awt.BorderLayout(5, 5));
        agregarPlan.setLocationRelativeTo(null);

        jLabel1.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Escoja el plan deseado");
        agregarPlan.getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        panelDialog.setLayout(new javax.swing.BoxLayout(panelDialog, javax.swing.BoxLayout.PAGE_AXIS));
        scrollDialog.setViewportView(panelDialog);

        agregarPlan.getContentPane().add(scrollDialog, java.awt.BorderLayout.CENTER);

        setUndecorated(true);
        setResizable(false);

        panelGeneral.setBackground(new java.awt.Color(98, 197, 255));
        panelGeneral.setPreferredSize(new java.awt.Dimension(850, 450));
        panelGeneral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelIzq.setBackground(new java.awt.Color(22, 49, 92));
        panelIzq.setPreferredSize(new java.awt.Dimension(300, 450));
        panelIzq.setLayout(new java.awt.GridBagLayout());

        nombre.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        nombre.setForeground(new java.awt.Color(255, 255, 255));
        nombre.setText("GERENTE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelIzq.add(nombre, gridBagConstraints);

        rol.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        rol.setForeground(new java.awt.Color(255, 255, 255));
        rol.setForeground(new java.awt.Color(255, 255, 255));
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm dd/MM/yyyy");
        LocalDateTime now = LocalDateTime.now();
        rol.setText(dtf.format(now));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        panelIzq.add(rol, gridBagConstraints);

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/usedPictures/Logo.png"))); // NOI18N
        panelIzq.add(Logo, new java.awt.GridBagConstraints());

        cont_reg.setBackground(new java.awt.Color(189, 210, 219));
        cont_reg.setPreferredSize(new java.awt.Dimension(146, 146));
        cont_reg.setLayout(new java.awt.BorderLayout());

        clientes.setBackground(new java.awt.Color(255, 255, 255));
        clientes.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        clientes.setForeground(new java.awt.Color(0, 0, 0));
        clientes.setText("Registro clientes");
        clientes.setContentAreaFilled(false);
        clientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clientesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clientesMouseExited(evt);
            }
        });
        clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesActionPerformed(evt);
            }
        });
        cont_reg.add(clientes, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        panelIzq.add(cont_reg, gridBagConstraints);

        cont_est.setBackground(new java.awt.Color(189, 210, 219));
        cont_est.setPreferredSize(new java.awt.Dimension(146, 25));
        cont_est.setLayout(new java.awt.BorderLayout());

        estadoClientes.setBackground(new java.awt.Color(255, 255, 255));
        estadoClientes.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        estadoClientes.setForeground(new java.awt.Color(0, 0, 0));
        estadoClientes.setText("Estado cliente");
        estadoClientes.setContentAreaFilled(false);
        estadoClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        estadoClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                estadoClientesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                estadoClientesMouseExited(evt);
            }
        });
        estadoClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoClientesActionPerformed(evt);
            }
        });
        cont_est.add(estadoClientes, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        panelIzq.add(cont_est, gridBagConstraints);

        cont_rep.setBackground(new java.awt.Color(189, 210, 219));
        cont_rep.setPreferredSize(new java.awt.Dimension(128, 25));
        cont_rep.setLayout(new java.awt.BorderLayout());

        reportes.setBackground(new java.awt.Color(255, 255, 255));
        reportes.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        reportes.setForeground(new java.awt.Color(0, 0, 0));
        reportes.setText("Reportes");
        reportes.setContentAreaFilled(false);
        reportes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportes.setPreferredSize(new java.awt.Dimension(128, 25));
        reportes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reportesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                reportesMouseExited(evt);
            }
        });
        reportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportesActionPerformed(evt);
            }
        });
        cont_rep.add(reportes, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        panelIzq.add(cont_rep, gridBagConstraints);

        cont_sal.setBackground(new java.awt.Color(102, 102, 102));
        cont_sal.setPreferredSize(new java.awt.Dimension(72, 25));
        cont_sal.setLayout(new java.awt.BorderLayout());

        salida.setBackground(new java.awt.Color(102, 102, 102));
        salida.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        salida.setForeground(new java.awt.Color(255, 255, 255));
        salida.setText("Salida");
        salida.setContentAreaFilled(false);
        salida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salidaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salidaMouseExited(evt);
            }
        });
        salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salidaActionPerformed(evt);
            }
        });
        cont_sal.add(salida, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(80, 10, 10, 10);
        panelIzq.add(cont_sal, gridBagConstraints);

        panelGeneral.add(panelIzq, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 150, 450));

        panelDer.setBackground(new java.awt.Color(255,255,255,150));
        panelDer.setPreferredSize(new java.awt.Dimension(500, 450));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/usedPictures/fondo2.jpg"))); // NOI18N
        Fondo.setToolTipText("");
        Fondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabsClientes.setBackground(new java.awt.Color(0, 0, 0, 100));
        tabsClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabsClientes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsClientesStateChanged(evt);
            }
        });

        tabGestiosClientes.setBackground(new java.awt.Color(255, 255, 255, 150));
        tabGestiosClientes.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tabGestiosClientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_id.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_id.setText("Identificación");
        tabGestiosClientes.add(label_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 188, 160, -1));
        label_id.setVisible(false);

        label_nombre.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_nombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_nombre.setText("Nombre");
        tabGestiosClientes.add(label_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 188, 170, -1));
        label_nombre.setVisible(false);

        label_dir.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_dir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_dir.setText("Dirección");
        tabGestiosClientes.add(label_dir, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 273, 160, -1));
        label_dir.setVisible(false);

        label_tel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_tel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_tel.setText("Teléfono");
        tabGestiosClientes.add(label_tel, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 273, 170, -1));
        label_tel.setVisible(false);

        label_mail.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_mail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_mail.setText("Correo ");
        tabGestiosClientes.add(label_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(463, 273, 170, -1));
        label_mail.setVisible(false);

        label_estado.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_estado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_estado.setText("Estado");
        tabGestiosClientes.add(label_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 349, 170, -1));
        label_estado.setVisible(false);

        label_titulo.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_titulo.setText("Seleccione el documento de identidad:");
        tabGestiosClientes.add(label_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 400, -1));

        label_cargo.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_cargo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_cargo.setText("Tipo de cliente");
        tabGestiosClientes.add(label_cargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 188, 170, -1));
        label_cargo.setVisible(false);

        label_resul_estado.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_resul_estado.setForeground(new java.awt.Color(0, 153, 51));
        label_resul_estado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tabGestiosClientes.add(label_resul_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 374, 173, 36));
        label_resul_estado.setVisible(false);

        jTF_resul_nombre.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_nombre.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTF_resul_nombre.setForeground(new java.awt.Color(0, 0, 0));
        jTF_resul_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_resul_nombre.setOpaque(true);
        tabGestiosClientes.add(jTF_resul_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 213, 173, 33));
        jTF_resul_nombre.setVisible(false);

        jTF_resul_dir.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_dir.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTF_resul_dir.setForeground(new java.awt.Color(0, 0, 0));
        jTF_resul_dir.setOpaque(true);
        tabGestiosClientes.add(jTF_resul_dir, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 298, 170, 33));
        jTF_resul_dir.setVisible(false);

        jTF_resul_tel.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_tel.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTF_resul_tel.setForeground(new java.awt.Color(0, 0, 0));
        jTF_resul_tel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_resul_tel.setOpaque(true);
        tabGestiosClientes.add(jTF_resul_tel, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 298, 173, 33));
        jTF_resul_tel.setVisible(false);

        jTF_resul_mail.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_mail.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTF_resul_mail.setForeground(new java.awt.Color(0, 0, 0));
        jTF_resul_mail.setOpaque(true);
        jTF_resul_mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_resul_mailActionPerformed(evt);
            }
        });
        tabGestiosClientes.add(jTF_resul_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 298, 173, 33));
        jTF_resul_mail.setVisible(false);

        jTF_resul_id.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_id.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tabGestiosClientes.add(jTF_resul_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 213, 100, 33));

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        try {
            AdministradorClientes admClient = new AdministradorClientes();
            ArrayList<String[]> usuarios= admClient.mostrarListaClientes();
            for (String[] usuario: usuarios){
                model.addElement(usuario[0] +" - " + usuario[2] +" - " + usuario[1] );
            }
            campoConsultaCliente.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
            campoConsultaCliente.setModel(model);
        } catch (IOException | SQLException e) {
            System.out.println("No fue posible crear la clase administradorClientes");
        }
        campoConsultaCliente.setSelectedIndex(-1);
        campoConsultaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoConsultaClienteActionPerformed(evt);
            }
        });
        AutoCompletion.enable(campoConsultaCliente );
        tabGestiosClientes.add(campoConsultaCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 300, 50));

        label_notificacion.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_notificacion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tabGestiosClientes.add(label_notificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 380, 40));

        label_resulEstado2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_resulEstado2.setForeground(new java.awt.Color(0, 153, 51));
        label_resulEstado2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tabGestiosClientes.add(label_resulEstado2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 330, 50));
        label_resul_estado.setVisible(false);

        jTF_resul_tipoid.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_tipoid.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTF_resul_tipoid.setForeground(new java.awt.Color(0, 0, 0));
        jTF_resul_tipoid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C.C", "T.I", "NIT"}));
        jTF_resul_tipoid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_resul_tipoidActionPerformed(evt);
            }
        });
        tabGestiosClientes.add(jTF_resul_tipoid, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 213, 60, 33));
        jTF_resul_tipoid.setSelectedIndex(-1);

        label_imEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/usedPictures/estado_usuario.png"))); // NOI18N
        label_imEstado.setOpaque(true);
        tabGestiosClientes.add(label_imEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        jTF_resul_tipocliente.setBackground(new java.awt.Color(255, 255, 255));
        jTF_resul_tipocliente.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTF_resul_tipocliente.setForeground(new java.awt.Color(0, 0, 0));
        jTF_resul_tipocliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Natural", "Corporativo"}));
        jTF_resul_tipocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_resul_tipoclienteActionPerformed(evt);
            }
        });
        tabGestiosClientes.add(jTF_resul_tipocliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 213, 173, 33));
        jTF_resul_tipocliente.setSelectedIndex(-1);

        cont_act.setBackground(new java.awt.Color(0, 10, 85));
        cont_act.setLayout(new java.awt.BorderLayout());

        actualizarInfo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        actualizarInfo.setForeground(new java.awt.Color(255, 255, 255));
        actualizarInfo.setText("Actualizar información");
        actualizarInfo.setContentAreaFilled(false);
        actualizarInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizarInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actualizarInfoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actualizarInfoMouseExited(evt);
            }
        });
        actualizarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarInfoActionPerformed(evt);
            }
        });
        cont_act.add(actualizarInfo, java.awt.BorderLayout.CENTER);

        tabGestiosClientes.add(cont_act, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 170, 30));

        cont_reg1.setBackground(new java.awt.Color(0, 10, 85));
        cont_reg1.setLayout(new java.awt.BorderLayout());

        Registrar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Registrar.setForeground(new java.awt.Color(255, 255, 255));
        Registrar.setText("Registrar");
        Registrar.setContentAreaFilled(false);
        Registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RegistrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RegistrarMouseExited(evt);
            }
        });
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });
        cont_reg1.add(Registrar, java.awt.BorderLayout.CENTER);

        tabGestiosClientes.add(cont_reg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 180, 30));

        cont_acti.setBackground(new java.awt.Color(0, 10, 85));
        cont_acti.setLayout(new java.awt.BorderLayout());

        cambiarEstado.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        cambiarEstado.setForeground(new java.awt.Color(255, 255, 255));
        cambiarEstado.setText("Activar/Desactivar");
        cambiarEstado.setContentAreaFilled(false);
        cambiarEstado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cambiarEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cambiarEstadoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cambiarEstadoMouseExited(evt);
            }
        });
        cambiarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarEstadoActionPerformed(evt);
            }
        });
        cont_acti.add(cambiarEstado, java.awt.BorderLayout.CENTER);

        tabGestiosClientes.add(cont_acti, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 180, 30));

        cont_limp.setBackground(new java.awt.Color(102, 102, 102));
        cont_limp.setLayout(new java.awt.BorderLayout());

        Limpiar.setForeground(new java.awt.Color(255, 255, 255));
        Limpiar.setText("Limpiar");
        Limpiar.setContentAreaFilled(false);
        Limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LimpiarMouseExited(evt);
            }
        });
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        cont_limp.add(Limpiar, java.awt.BorderLayout.CENTER);

        tabGestiosClientes.add(cont_limp, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 390, 72, 22));

        tabsClientes.addTab("Gestion", tabGestiosClientes);

        tabRegistroNumero.setBackground(new java.awt.Color(255, 255, 255, 150));
        tabRegistroNumero.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tabRegistroNumero.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titulo1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_titulo1.setText("Seleccione el documento de identidad:");
        tabRegistroNumero.add(label_titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 400, -1));

        try {
            AdministradorClientes admClient = new AdministradorClientes();
            campoConsultaClientePlan.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
            campoConsultaClientePlan.setModel(model);
        } catch (IOException | SQLException e) {
            System.out.println("No fue posible crear la clase administradorClientes");
        }
        campoConsultaClientePlan.setSelectedIndex(-1);
        campoConsultaClientePlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoConsultaClientePlanActionPerformed(evt);
            }
        });
        AutoCompletion.enable(campoConsultaClientePlan);
        tabRegistroNumero.add(campoConsultaClientePlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 300, 50));

        panelLista.setLayout(new javax.swing.BoxLayout(panelLista, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane2.setViewportView(panelLista);
        //try {
            //        paintPanelLista();
            //} catch (SQLException ex) {
            //   Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
            //}

        tabRegistroNumero.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 660, 260));

        cont_agg.setBackground(new java.awt.Color(0, 10, 85));
        cont_agg.setForeground(new java.awt.Color(255, 255, 255));
        cont_agg.setLayout(new java.awt.BorderLayout());

        agregarNumero.setBackground(new java.awt.Color(255, 255, 255));
        agregarNumero.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        agregarNumero.setForeground(new java.awt.Color(255, 255, 255));
        agregarNumero.setText("Agregar Numero");
        agregarNumero.setContentAreaFilled(false);
        agregarNumero.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregarNumero.setEnabled(false);
        agregarNumero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                agregarNumeroMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                agregarNumeroMouseExited(evt);
            }
        });
        agregarNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNumeroActionPerformed(evt);
            }
        });
        cont_agg.add(agregarNumero, java.awt.BorderLayout.CENTER);

        tabRegistroNumero.add(cont_agg, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 150, 50));

        tabsClientes.addTab("Registro de Numero", tabRegistroNumero);

        tabsReportes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsReportesStateChanged(evt);
            }
        });

        reporteGanancias.setBackground(new java.awt.Color(255, 255, 255, 150));
        reporteGanancias.setLayout(new java.awt.BorderLayout());
        tabsReportes.addTab("Ganancias", reporteGanancias);

        reporteFactura.setBackground(new java.awt.Color(255, 255, 255, 150));
        reporteFactura.setLayout(new java.awt.BorderLayout());
        tabsReportes.addTab("Factura", reporteFactura);

        reporteOperadores.setBackground(new java.awt.Color(255, 255, 255, 150));
        reporteOperadores.setLayout(new java.awt.BorderLayout());
        tabsReportes.addTab("Operadores", reporteOperadores);

        reporteNose.setBackground(new java.awt.Color(255, 255, 255, 150));
        reporteNose.setLayout(new java.awt.BorderLayout());
        tabsReportes.addTab("Nose", reporteNose);

        javax.swing.GroupLayout panelDerLayout = new javax.swing.GroupLayout(panelDer);
        panelDer.setLayout(panelDerLayout);
        panelDerLayout.setHorizontalGroup(
            panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsReportes, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tabsClientes))
            .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDerLayout.createSequentialGroup()
                    .addComponent(Fondo)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelDerLayout.setVerticalGroup(
            panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsReportes, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
            .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tabsClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
            .addGroup(panelDerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDerLayout.createSequentialGroup()
                    .addComponent(Fondo)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        //Colocar font a las ventanas
        tabsClientes.setFont( new Font("Sansserif", Font.BOLD, 12));
        //Poner invisible al inicio tab Usuarios
        tabsClientes.setVisible(false);
        //Iniciar el componente en modo oculto
        tabsReportes.setVisible(false);

        panelGeneral.add(panelDer, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 700, 450));
        panelDer.getAccessibleContext().setAccessibleDescription("");

        barraTitulo.setBackground(new java.awt.Color(43, 41, 40));
        barraTitulo.setForeground(new java.awt.Color(255, 255, 255));
        barraTitulo.setPreferredSize(new java.awt.Dimension(850, 30));
        barraTitulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barraTituloMouseDragged(evt);
            }
        });
        barraTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barraTituloMousePressed(evt);
            }
        });

        tituloSuperior.setBackground(new java.awt.Color(0, 0, 0));
        tituloSuperior.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tituloSuperior.setForeground(new java.awt.Color(255, 255, 255));
        tituloSuperior.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloSuperior.setText("Gerente");

        javax.swing.GroupLayout barraTituloLayout = new javax.swing.GroupLayout(barraTitulo);
        barraTitulo.setLayout(barraTituloLayout);
        barraTituloLayout.setHorizontalGroup(
            barraTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tituloSuperior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        barraTituloLayout.setVerticalGroup(
            barraTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraTituloLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelGeneral.add(barraTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_resul_mailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_resul_mailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_resul_mailActionPerformed

    private void salidaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salidaMouseEntered
        // TODO add your handling code here:
        cont_sal.setBackground(new Color(0, 0, 0)); 
    }//GEN-LAST:event_salidaMouseEntered

    private void salidaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salidaMouseExited
        // TODO add your handling code here:
        cont_sal.setBackground(new Color(102, 102, 102)); 
    }//GEN-LAST:event_salidaMouseExited

    private void clientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientesMouseEntered
        // TODO add your handling code here:
        cont_reg.setBackground(new Color(0, 10, 85)); 
        clientes.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_clientesMouseEntered

    private void clientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientesMouseExited
        // TODO add your handling code here:
        cont_reg.setBackground(new Color(189, 210, 219)); 
        clientes.setForeground(new Color(0, 0, 0)); 
    }//GEN-LAST:event_clientesMouseExited

    private void estadoClientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estadoClientesMouseEntered
        // TODO add your handling code here:
        cont_est.setBackground(new Color(0, 10, 85)); 
        estadoClientes.setForeground(new Color(255, 255, 255)); 
    }//GEN-LAST:event_estadoClientesMouseEntered

    private void estadoClientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estadoClientesMouseExited
        // TODO add your handling code here:
        cont_est.setBackground(new Color(189, 210, 219)); 
        estadoClientes.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_estadoClientesMouseExited

    private void reportesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportesMouseEntered
        // TODO add your handling code here:
        cont_rep.setBackground(new  Color(0, 10, 85)); 
        reportes.setForeground(new Color(255, 255, 255)); 
    }//GEN-LAST:event_reportesMouseEntered

    private void reportesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportesMouseExited
        // TODO add your handling code here:
        cont_rep.setBackground(new Color(189, 210, 219)); 
        reportes.setForeground(new Color(0, 0, 0)); 
    }//GEN-LAST:event_reportesMouseExited

    private void actualizarInfoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarInfoMouseEntered
        // TODO add your handling code here:
        cont_act.setBackground(new Color(41, 35, 92)); 
    }//GEN-LAST:event_actualizarInfoMouseEntered

    private void actualizarInfoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarInfoMouseExited
        // TODO add your handling code here:
        cont_act.setBackground(new Color(0, 10, 85)); 
    }//GEN-LAST:event_actualizarInfoMouseExited

    private void RegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegistrarMouseEntered
        // TODO add your handling code here:
        cont_reg1.setBackground(new Color(41, 35, 92)); 
    }//GEN-LAST:event_RegistrarMouseEntered

    private void RegistrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegistrarMouseExited
        // TODO add your handling code here:
        cont_reg1.setBackground(new Color(0, 10, 85)); 
    }//GEN-LAST:event_RegistrarMouseExited

    private void cambiarEstadoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarEstadoMouseEntered
        // TODO add your handling code here:
        cont_acti.setBackground(new Color(41, 35, 92)); 
    }//GEN-LAST:event_cambiarEstadoMouseEntered

    private void cambiarEstadoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarEstadoMouseExited
        // TODO add your handling code here:
        cont_acti.setBackground(new Color(0, 10, 85)); 
    }//GEN-LAST:event_cambiarEstadoMouseExited

    private void LimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LimpiarMouseEntered
        // TODO add your handling code here:
        cont_limp.setBackground(new Color(0, 0, 0)); 
    }//GEN-LAST:event_LimpiarMouseEntered

    private void LimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LimpiarMouseExited
        // TODO add your handling code here:
        cont_limp.setBackground(new Color(102, 102, 102)); 
    }//GEN-LAST:event_LimpiarMouseExited

    private void agregarNumeroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarNumeroMouseEntered
        // TODO add your handling code here:
        cont_agg.setBackground(new Color(41, 35, 92)); 
    }//GEN-LAST:event_agregarNumeroMouseEntered

    private void agregarNumeroMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarNumeroMouseExited
        // TODO add your handling code here:
        cont_agg.setBackground(new Color(0, 10, 85)); 
    }//GEN-LAST:event_agregarNumeroMouseExited

    
    private void clientesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_clientesActionPerformed

        tabsReportes.setVisible(false);
        tabsClientes.setVisible(true);
        panelGeneral.repaint();
        panelGeneral.revalidate();
        panelDer.repaint();
        panelDer.revalidate();
        reportes.setEnabled(true);
        estadoClientes.setEnabled(true);

    }// GEN-LAST:event_clientesActionPerformed

    private void salidaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_salidaActionPerformed
        // TODO add your handling code here:
        dispose();
        try {
            admClient.cerrarConexion(idUsuario, tipoidUsuario);
        } catch (SQLException ex) {
            Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }
        Login login = new Login();
        login.setVisible(true);

    }// GEN-LAST:event_salidaActionPerformed

    private void barraTituloMouseDragged(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_barraTituloMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }// GEN-LAST:event_barraTituloMouseDragged

    private void barraTituloMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_barraTituloMousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }// GEN-LAST:event_barraTituloMousePressed

    private void reportesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_reportesActionPerformed
        flag = true;
        tabsReportes.setVisible(true);
        panelGeneral.repaint();
        panelGeneral.revalidate();
        panelDer.repaint();
        panelDer.revalidate();
        reportes.setEnabled(false);
        clientes.setEnabled(true);
        estadoClientes.setEnabled(true);
        tabsReportes.setSelectedIndex(1);
        tabsReportes.setSelectedIndex(0);

    }// GEN-LAST:event_reportesActionPerformed

    private void estadoClientesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_estadoClientesActionPerformed
        // panelDer.removeAll();
        tabsReportes.setVisible(false);
        panelGeneral.repaint();
        panelGeneral.revalidate();
        panelDer.repaint();
        panelDer.revalidate();
        reportes.setEnabled(true);
        clientes.setEnabled(true);
        estadoClientes.setEnabled(false);

    }// GEN-LAST:event_estadoClientesActionPerformed

    private void tabsReportesStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_tabsReportesStateChanged
        if (tabsReportes.getSelectedIndex() == 0 && flag == true) {
            
            panelCalendar = new JPanel();
            texto1 = new JLabel("Ingrese la fecha inicial:");
            texto1.setFont(new java.awt.Font("SansSerif",Font.BOLD, 12)); 
            calendar = new com.toedter.calendar.JDateChooser();
            calendar.setDateFormatString("yyyy-MM-dd");
            calendar.setBounds(0, 0, 171, 24);
            texto2 = new JLabel("Ingrese la fecha final:");
            texto2.setFont(new java.awt.Font("SansSerif",Font.BOLD, 12)); 
            calendar1 = new com.toedter.calendar.JDateChooser();
            calendar1.setDateFormatString("yyyy-MM-dd");
            calendar.setBounds(0, 0, 171, 24);
            panelCalendar.add(texto1);
            panelCalendar.add(calendar);
            panelCalendar.add(texto2);
            panelCalendar.add(calendar1);
            panelCalendar.setPreferredSize(new Dimension(60,120));
         
            JOptionPane.showMessageDialog(null,panelCalendar,"Información",JOptionPane.PLAIN_MESSAGE);
            
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            String fechaInicial = formato.format(calendar.getDate());
            String fechaFinal = formato.format(calendar1.getDate());
            
            try {
                int arr[] = admClient.estadisticasPlanes(fechaInicial,fechaFinal);
                int planes[] = new int[arr.length/2];
                int ganancias[] = new int[arr.length/2];
                        
                int j = 0;
                for(int i = 0; i< arr.length;i=i+2){
                    planes[j] = arr[i];
                    ganancias[j] = arr[i+1];
                    System.out.println(planes[j]);
                    System.out.println(ganancias[j]);
                    j++;
                }
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                Connection conn = getConnection();
                Map<String, Object> parameters = new HashMap<>();
                parameters.put("title", "Soy un titulo mamon");
                String jrxml = "/reports/reportes.jrxml";
                JasperPrint print = createPrint(parameters, jrxml, conn);
                JRViewer view = createReportView(print);
                reporteGanancias.add(view);
                conn.close();

            } catch (JRException | IOException | SQLException ex) {
                Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
            }
            flag = false;
        }
        // else{
        //
        // }

    }// GEN-LAST:event_tabsReportesStateChanged

    private void cambiarEstadoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cambiarEstadoActionPerformed

        estadoventanasConsultaClientes(false); // Se ocultan los posibles jlabels sobrepuestos

        int op;
        String info[] = String.valueOf(campoConsultaCliente.getSelectedItem()).split(" - ");
        String id = info[2];
        String tipoid = info[1];
        String user;
        String[] datos;

        try {
            datos = admClient.mostrarClientes(id, tipoid);
            if ("ACTIVO".equals(datos[7])) { // En el caso de que esté activo
                user = "" + datos[2] + " " + datos[3]
                        + " esta a punto de ser desactivado, ¿desea continuar?";
                op = JOptionPane.showConfirmDialog(null, user, "Desactivar cliente",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,
                        new javax.swing.ImageIcon(
                                getClass().getResource("/usedPictures/inactivar.png")));

                if (op == 0) {
                    admClient.cambiaEstadoCliente(id, tipoid, "false");
                    label_notificacion.setText("El usuario con identificación " + id + " ha sido:");
                    label_resulEstado2.setText("DESACTIVADO");
                    label_resulEstado2.setForeground(new java.awt.Color(255, 51, 51)); // color rojo
                    estadoventanasEstadoCliente(true);
                } else {
                    JOptionPane.showMessageDialog(null, "No se han aplicado cambios",
                            "Notificacion", JOptionPane.INFORMATION_MESSAGE,
                            new javax.swing.ImageIcon(
                                    getClass().getResource("/usedPictures/estado_usuario.png")));
                    estadoventanasEstadoCliente(false);
                }
            } else { // En el caso de que esté inactivo
                user = "" + datos[2] + " " + datos[3]
                        + " esta a punto de ser reactivado, ¿desea continuar?";
                op = JOptionPane.showConfirmDialog(null, user, "Activar cliente",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,
                        new javax.swing.ImageIcon(
                                getClass().getResource("/usedPictures/activar.png")));
                if (op == 0) {
                    admClient.cambiaEstadoCliente(id, tipoid, "true");
                    label_notificacion.setText("El cliente con identificación " + id + " ha sido:");
                    label_resulEstado2.setText("ACTIVADO");
                    label_resulEstado2.setForeground(new java.awt.Color(0, 153, 51)); // color verde
                    estadoventanasEstadoCliente(true);
                } else {
                    JOptionPane.showMessageDialog(null, "No se han aplicado cambios",
                            "Notificacion", JOptionPane.INFORMATION_MESSAGE,
                            new javax.swing.ImageIcon(
                                    getClass().getResource("/usedPictures/estado_usuario.png")));
                    estadoventanasEstadoCliente(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }

    }// GEN-LAST:event_cambiarEstadoActionPerformed

    private void campoConsultaClienteActionPerformed(java.awt.event.ActionEvent evt) {
        if (campoConsultaCliente.getSelectedIndex() != -1) {
            String info[] = String.valueOf(campoConsultaCliente.getSelectedItem()).split(" - ");
            String id = info[2];
            String tipoid = info[1];
            idActual = info[2];
            tipoidActual = info[1];

            estadoventanasEstadoCliente(false); // Se ocultan los posibles jlabels sobrepuestos

            String[] datos;
            try {
                datos = admClient.mostrarClientes(id, tipoid);
                if (datos[0] != null) {
                    /*
                     * for (int j = 0; j < datos.length; j++) { System.out.println(datos[j]); }
                     */

                    estadoventanasConsultaClientes(true);

                    // Aparecen los resultados
                    jTF_resul_tipoid.setSelectedItem(datos[1]);
                    jTF_resul_id.setText(datos[0]);
                    jTF_resul_tipocliente.setSelectedItem(datos[2]);
                    jTF_resul_nombre.setText(datos[3]);
                    jTF_resul_dir.setText(datos[4]);
                    jTF_resul_tel.setText(datos[5]);
                    jTF_resul_mail.setText(datos[6]);

                    if ("ACTIVO".equals(datos[7])) {
                        label_resul_estado.setText(datos[7]);
                        label_resul_estado.setForeground(new java.awt.Color(0, 153, 51));
                    } else {
                        label_resul_estado.setText(datos[7]);
                        label_resul_estado.setForeground(new java.awt.Color(255, 51, 51));
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "El cliente ingresado no existe",
                            "Advertencia", JOptionPane.ERROR_MESSAGE);
                    estadoventanasConsultaClientes(false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }// GEN-LAST:event_campoConsultaClienteActionPerformed

    private void actualizarInfoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_actualiarInfoActionPerformed
        // tipo_cliente, nombre, direccion telefono, correo, estado,id_cliente, tipo_identificacion
        try {
            int returnCode;
            String datos[] = {String.valueOf(jTF_resul_tipocliente.getSelectedItem()),
                    jTF_resul_nombre.getText(), jTF_resul_dir.getText(), jTF_resul_tel.getText(),
                    jTF_resul_mail.getText(), jTF_resul_id.getText(),
                    String.valueOf(jTF_resul_tipoid.getSelectedItem())};

            if (!idActual.equals(datos[5]) && !tipoidActual.equals(datos[6])) {
                JOptionPane.showMessageDialog(null,
                        "No es posible editar el documento de identificación", "Advertencia",
                        JOptionPane.ERROR_MESSAGE);
                jTF_resul_id.setText(idActual);
            } else {

                returnCode = admClient.modificarCliente(datos);

                if (returnCode == 1) {
                    ArrayList<String[]> usuarios = admClient.mostrarListaClientes();
                    DefaultComboBoxModel model = new DefaultComboBoxModel();
                    for (String[] usuario : usuarios) {
                        model.addElement(usuario[0] + " - " + usuario[2] + " - " + usuario[1]);
                    }
                    campoConsultaCliente.setModel(model);
                    campoConsultaCliente.setSelectedItem(jTF_resul_nombre.getText() + " - "
                            + String.valueOf(jTF_resul_tipoid.getSelectedItem()) + " - "
                            + jTF_resul_id.getText());

                    validate();
                    repaint();
                    JOptionPane.showMessageDialog(null, "Se actulizo la informacion");

                } else {
                    JOptionPane.showMessageDialog(null, "No fue posible actualizar la informacion",
                            "Advertencia", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }

    }// GEN-LAST:event_actualiarInfoActionPerformed

    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_RegistrarActionPerformed
        String datos[] = {jTF_resul_id.getText(),
                String.valueOf(jTF_resul_tipoid.getSelectedItem()),
                String.valueOf(jTF_resul_tipocliente.getSelectedItem()), jTF_resul_nombre.getText(),
                jTF_resul_dir.getText(), jTF_resul_tel.getText(), jTF_resul_mail.getText()};

        try {
            // System.out.println("");
            int confirmacion = admClient.registrarCliente(datos);
            if (confirmacion == -1) {
                JOptionPane.showMessageDialog(null,
                        "No fue posible registrar al cliente ingresado, dato inválido",
                        "Notificación", JOptionPane.ERROR_MESSAGE);
            } else if (confirmacion == 2) {
                 JOptionPane.showMessageDialog(null,
                        "No fue posible registrar al cliente ingresado, dato(s) vacio(s)",
                        "Notificación", JOptionPane.ERROR_MESSAGE);
            } else {
                ArrayList<String[]> usuarios = admClient.mostrarListaClientes();
                DefaultComboBoxModel model = new DefaultComboBoxModel();
                for (String[] usuario : usuarios) {
                    model.addElement(usuario[0] + " - " + usuario[2] + " - " + usuario[1]);
                }
                campoConsultaCliente.setModel(model);
                campoConsultaClientePlan.setModel(model);
                validate();
                repaint();
                campoConsultaCliente.getModel()
                        .setSelectedItem(datos[3] + " - " + datos[1] + " - " + datos[0]);
                campoConsultaClientePlan.getModel()
                        .setSelectedItem(datos[3] + " - " + datos[1] + " - " + datos[0]);
                JOptionPane.showMessageDialog(null,
                        "Se registró la informacion basica del cliente ingresado, ahora escoja un plan para el cliente",
                        "Notificación", JOptionPane.INFORMATION_MESSAGE);
                tabsClientes.setSelectedIndex(1);
            }

        } catch (IOException | SQLException e) {
            Logger.getLogger(Administrador.class.getName()).log(Level.SEVERE, null, e);
        }

    }// GEN-LAST:event_RegistrarActionPerformed

    private void jTF_resul_tipoidActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTF_resul_tipoidActionPerformed
        // TODO add your handling code here:
        if (jTF_resul_tipoid.getSelectedIndex() != -1) {
            String tipoid = String.valueOf(jTF_resul_tipoid.getSelectedItem());
        }
    }// GEN-LAST:event_jTF_resul_tipoidActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_LimpiarActionPerformed
        limpiar();
    }// GEN-LAST:event_LimpiarActionPerformed


    private void limpiar() {
        campoConsultaCliente.setSelectedIndex(-1);
        idActual = "";
        jTF_resul_id.setText("");
        jTF_resul_tipoid.setSelectedIndex(-1);
        jTF_resul_nombre.setText("");
        jTF_resul_tipocliente.setSelectedIndex(-1);
        jTF_resul_tel.setText("");
        jTF_resul_mail.setText("");
        jTF_resul_dir.setText("");
        panelLista.removeAll();
        panelLista.revalidate();
        panelLista.repaint();
    }


    private void jTF_resul_tipoclienteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTF_resul_tipoclienteActionPerformed
        // TODO add your handling code here:
        if (jTF_resul_tipocliente.getSelectedIndex() != -1) {
            String cargo = String.valueOf(jTF_resul_tipocliente.getSelectedItem());

        }

    }// GEN-LAST:event_jTF_resul_tipoclienteActionPerformed

    private void tabsClientesStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_tabsClientesStateChanged
        // TODO add your handling code here:
    }// GEN-LAST:event_tabsClientesStateChanged

    private void campoConsultaClientePlanActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            agregarNumero.setEnabled(true);
            paintPanelLista();
        } catch (SQLException ex) {
            Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void paintPanelLista() throws SQLException {
        if (campoConsultaClientePlan.getSelectedIndex() != -1){
            String info[] = String.valueOf(campoConsultaClientePlan.getSelectedItem()).split(" - ");
            String id = info[2];
            String tipoid = info[1];
            panelLista.removeAll();
            Border blueline = BorderFactory.createLineBorder(new java.awt.Color(22, 49, 92), 5);
            for (String plan : admClient.getPlanesCliente(id, tipoid)) {
                JPanel panelPlan = new JPanel();
                panelPlan.setLayout(new BoxLayout(panelPlan, BoxLayout.LINE_AXIS));
                JLabel planLabel = new JLabel(plan);
                panelPlan.add(planLabel);
                JButton boton = new JButton("Cancelar Plan");
                boton.setHorizontalAlignment(SwingConstants.LEFT);
                boton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        try {
                            cancelarPlanActionPerformed(evt);
                        } catch (SQLException ex) {
                            Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
                panelPlan.add(boton);
                panelPlan.setBorder(blueline);
                panelLista.add(panelPlan);

            }
            panelLista.revalidate();
            panelLista.repaint();
        }
    }

    private void cancelarPlanActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        JButton boton = (JButton) evt.getSource();
        JPanel padre = (JPanel) boton.getParent();
        JPanel abuelo = (JPanel) padre.getParent();
        String plan = ((JLabel) padre.getComponent(0)).getText();
        String info[] = String.valueOf(campoConsultaClientePlan.getSelectedItem()).split(" - ");
        String id = info[2];
        String tipoid = info[1];
        admClient.cancelarPlan(admClient.getContratoFromPlan(plan),
                admClient.getNumeroFromPlan(plan), id, tipoid);
        abuelo.remove(padre);
        abuelo.revalidate();
        abuelo.repaint();
        agregarPlan.setVisible(false);
    }

    private void escogerPlanActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        String plan = evt.getActionCommand();
        String info[] = String.valueOf(campoConsultaClientePlan.getSelectedItem()).split(" - ");
        String id = info[2];
        String tipoid = info[1];
        admClient.agregarPlan(admClient.getIdPlan(plan), id, tipoid,numero);
        paintPanelLista();
        agregarPlan.setVisible(false);
    }

    private void agregarNumeroActionPerformed(java.awt.event.ActionEvent evt) {
        int procede = 0;
        
        numero=JOptionPane.showInputDialog(null,"Digite el numero","Informacion",JOptionPane.INFORMATION_MESSAGE);
        if (null != numero){
            if (numero.matches("-?\\d+(\\.\\d+)?")){
            procede = 1;
            
            }
        }
        
        if (procede == 1){
            String info[] = String.valueOf(campoConsultaClientePlan.getSelectedItem()).split(" - ");
            String id = info[2];
            String tipoid = info[1];
            int permitido = admClient.clientePermitido(id, tipoid);
            if (permitido > 0) {
                panelDialog.removeAll();
                fillPlanes();
                agregarPlan.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null,
                        "El usuario es natural y por lo tanto solo puede tener hasta 3 planes",
                        "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private void fillPlanes() {
        try {
            for (String plan : admClient.getPlanes()) {
                JButton boton = new JButton(plan);
                boton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        try {
                            escogerPlanActionPerformed(evt);
                        } catch (SQLException ex) {
                            Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
                boton.setHorizontalAlignment(SwingConstants.LEFT);
                panelDialog.add(boton);
                agregarPlan.pack();

            }
        } catch (SQLException ex) {
            Logger.getLogger(Gerente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void estadoventanasConsultaClientes(boolean bol) {
        // Aparecer los labels de consulta
        label_id.setVisible(bol);
        label_cargo.setVisible(bol);
        label_nombre.setVisible(bol);
        label_dir.setVisible(bol);
        label_tel.setVisible(bol);
        label_mail.setVisible(bol);
        label_estado.setVisible(bol);
        
        
        // Aparecer los cuadros de consulta
        jTF_resul_id.setVisible(bol);
        jTF_resul_tipocliente.setVisible(bol);
        jTF_resul_nombre.setVisible(bol);
        jTF_resul_dir.setVisible(bol);
        jTF_resul_tel.setVisible(bol);
        jTF_resul_mail.setVisible(bol);
        jTF_resul_tipoid.setVisible(bol);
        label_resul_estado.setVisible(bol);
        revalidate();
        repaint();
    }

    private void estadoventanasEstadoCliente(boolean bol) {
        // Aparecer los labels de consulta
        label_notificacion.setVisible(bol);
        label_imEstado.setVisible(bol);

        // Aparecer los cuadros de consulta
        label_resulEstado2.setVisible(bol);
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and
         * feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gerente.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gerente.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gerente.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gerente.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gerente("1193552015", "C.C", "Andres Felipe Giron Perez").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton Limpiar;
    private javax.swing.JLabel Logo;
    private javax.swing.JButton Registrar;
    private javax.swing.JButton actualizarInfo;
    private javax.swing.JButton agregarNumero;
    private javax.swing.JDialog agregarPlan;
    private javax.swing.JPanel barraTitulo;
    private javax.swing.JButton cambiarEstado;
    private javax.swing.JComboBox<String> campoConsultaCliente;
    private javax.swing.JComboBox<String> campoConsultaClientePlan;
    private javax.swing.JButton clientes;
    private javax.swing.JPanel cont_act;
    private javax.swing.JPanel cont_acti;
    private javax.swing.JPanel cont_agg;
    private javax.swing.JPanel cont_est;
    private javax.swing.JPanel cont_limp;
    private javax.swing.JPanel cont_reg;
    private javax.swing.JPanel cont_reg1;
    private javax.swing.JPanel cont_rep;
    private javax.swing.JPanel cont_sal;
    private javax.swing.JButton estadoClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_resul_dir;
    private javax.swing.JTextField jTF_resul_id;
    private javax.swing.JTextField jTF_resul_mail;
    private javax.swing.JTextField jTF_resul_nombre;
    private javax.swing.JTextField jTF_resul_tel;
    private javax.swing.JComboBox<String> jTF_resul_tipocliente;
    private javax.swing.JComboBox<String> jTF_resul_tipoid;
    private javax.swing.JLabel label_cargo;
    private javax.swing.JLabel label_dir;
    private javax.swing.JLabel label_estado;
    private javax.swing.JLabel label_id;
    private javax.swing.JLabel label_imEstado;
    private javax.swing.JLabel label_mail;
    private javax.swing.JLabel label_nombre;
    private javax.swing.JLabel label_notificacion;
    private javax.swing.JLabel label_resulEstado2;
    private javax.swing.JLabel label_resul_estado;
    private javax.swing.JLabel label_tel;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JLabel label_titulo1;
    private javax.swing.JLabel nombre;
    private javax.swing.JPanel panelDer;
    private javax.swing.JPanel panelDialog;
    private javax.swing.JPanel panelGeneral;
    private javax.swing.JPanel panelIzq;
    private javax.swing.JPanel panelLista;
    private javax.swing.JPanel reporteFactura;
    private javax.swing.JPanel reporteGanancias;
    private javax.swing.JPanel reporteNose;
    private javax.swing.JPanel reporteOperadores;
    private javax.swing.JButton reportes;
    private javax.swing.JLabel rol;
    private javax.swing.JButton salida;
    private javax.swing.JScrollPane scrollDialog;
    private javax.swing.JPanel tabGestiosClientes;
    private javax.swing.JPanel tabRegistroNumero;
    private javax.swing.JTabbedPane tabsClientes;
    private javax.swing.JTabbedPane tabsReportes;
    private javax.swing.JLabel tituloSuperior;
    // End of variables declaration//GEN-END:variables
}
